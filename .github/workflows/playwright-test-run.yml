name: Playwright Test Runner

on:
  workflow_call:
    inputs:
      run_branch:
        description: 'Branch to run tests on'
        required: true
        type: string
        default: 'main'
      test_scope:
        description: 'Test scope to run'
        required: true
        type: string
        default: 'regression'
    secrets:
      ADMIN_USERNAME:
        required: true
      ADMIN_PASSWORD:
        required: true
      WORKFLOW_TOKEN:
        required: true

  workflow_dispatch:
    inputs:
      test_scope:
        description: 'Select test scope'
        type: choice
        required: false
        default: 'regression'
        options:
          - smoke
          - regression

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run-and-publish:
    runs-on: ubuntu-latest
    outputs:
      run_folder: ${{ steps.set-run-folder.outputs.run_folder }}

    env:
      TEST_SCOPE: ${{ inputs.test_scope || github.event.inputs.test_scope || 'regression' }}
      CHECKOUT_REF: ${{ inputs.run_branch || github.event.inputs.run_branch || 'main' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          ref: ${{ env.CHECKOUT_REF }}

      - name: Setup Node.js & Tools
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies, Allure CLI & Playwright
        run: |
          npm ci
          npm install -D allure-commandline
          npx playwright install

      - name: Run Playwright tests (${{ env.TEST_SCOPE }})
        env:
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        run: npm run test:${{ env.TEST_SCOPE }}

      - name: Set run folder name
        id: set-run-folder
        run: echo "run_folder=run-${{ github.run_number }}" >> $GITHUB_OUTPUT

      # - name: Prepare Allure Report
      #   run: |
      #     mkdir -p gh-pages/${{ steps.set-run-folder.outputs.run_folder }}
      #     cp -r allure-results/* gh-pages/${{ steps.set-run-folder.outputs.run_folder }}/ || echo "No allure-results found"
      #     touch gh-pages/.nojekyll

      # - name: Upload Test Report Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: test-report
      #     path: gh-pages

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        #id: allure-report
        with:
          allure_results: allure-results
          #gh_pages: gh-pages
          #allure_report: allure-report
          allure_history: allure-history
          keep_reports: 20

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

  deploy:
    runs-on: ubuntu-latest
    needs: run-and-publish

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download Test Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: test-report
          path: gh-pages

      - name: Upload Allure Report as GitHub Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4