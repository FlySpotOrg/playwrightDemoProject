name: Playwright Test Runner

on:
  workflow_call:
    inputs:
      run_branch:
        description: 'Branch to run tests on'
        required: true
        type: string
        default: 'main'
      test_scope:
        description: 'Test scope to run'
        required: true
        type: string
        default: 'regression'
    secrets:
      ADMIN_USERNAME:
        required: true
      ADMIN_PASSWORD:
        required: true

  workflow_dispatch:
    inputs:
      test_scope:
        description: 'Select test scope'
        type: choice
        required: false
        default: 'regression'
        options:
          - smoke
          - regression

jobs:
  run-and-publish:
    runs-on: ubuntu-latest
    env:
      TEST_SCOPE: ${{ inputs.test_scope || github.event.inputs.test_scope || 'regression' }}
      CHECKOUT_REF: ${{ inputs.run_branch || github.event.inputs.run_branch || 'main' }}
      SHORT_SHA: ${{ github.sha }}
      RUN_FOLDER: run-${{ github.run_number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true
          ref: ${{ env.CHECKOUT_REF }}

      - name: Setup Node.js & Tools
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies, Allure CLI & Playwright
        run: |
          npm ci
          npm install -D allure-commandline
          npx playwright install

      - name: Run Playwright tests (${{ env.TEST_SCOPE }})
        env:
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        run: npm run test:${{ env.TEST_SCOPE }}

      # Checkout gh-pages branch separately
      - name: Checkout gh-pages branch
        if: always()
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true

      # Prepare deployment folder
      - name: Prepare Allure Report for Deployment
        if: always()
        run: |
          export RUN_FOLDER="run-${{ github.run_number }}"
          mkdir -p gh-pages/${RUN_FOLDER}
          cp -r allure-results/* gh-pages/${RUN_FOLDER}/ || echo "No allure-results found"
          touch gh-pages/.nojekyll

      - name: Upload Allure Report as Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v1
        with:
          path: gh-pages/${{ env.RUN_FOLDER }}

      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v2

      # - name: Deploy Allure Report to GitHub Pages
      #   if: always()
      #   run: |
      #     cd gh-pages
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"

      #     git add .
      #     if git diff --cached --quiet; then
      #       echo "No changes to commit."
      #     else
      #       git commit -m "Add Playwright Allure Report ${{ env.TEST_SCOPE }} - run #${{ github.run_number }}"
      #       git push origin gh-pages
      #     fi

      # - name: Comment status & report link
      #   if: always()
      #   uses: Sibz/github-status-action@v1
      #   with:
      #     authToken: ${{ secrets.GITHUB_TOKEN }}
      #     owner: FlySpotOrg
      #     repository: playwrightDemoProject
      #     sha: ${{ github.event.pull_request.head.sha || github.sha }}
      #     state: success
      #     context: "Playwright / ${{ env.TEST_SCOPE }} tests"
      #     description: "See Allure report â†’"
      #     target_url: https://${{ github.repository_owner }}.github.io/playwrightDemoProject/run-${{ github.run_number }}